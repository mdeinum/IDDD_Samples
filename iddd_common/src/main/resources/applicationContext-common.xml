<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <aop:aspectj-autoproxy/>

    <context:annotation-config/>
    <context:property-placeholder location="classpath:application.properties" />

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean class="com.saasovation.common.spring.HibernateSessionFactoryProcessor" />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="eventStoreDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionProvider" class="com.saasovation.common.spring.SpringHibernateSessionProvider" autowire="byName"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="abstractTransactionalServiceProxy" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="eventStore" class="com.saasovation.common.port.adapter.persistence.hibernate.HibernateEventStore" autowire="byName"/>

    <bean id="eventStoreDataSource"  class="com.zaxxer.hikari.HikariDataSource">
        <property name="poolName" value="springHikariCP" />
        <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />
        <property name="minimumIdle" value="3" />
        <property name="maximumPoolSize" value="15" />
        <property name="autoCommit" value="false" />
        <property name="dataSourceProperties">
            <props>
                <prop key="url">${spring.datasource.url}</prop>
                <prop key="user">${spring.datasource.username}</prop>
                <prop key="password">${spring.datasource.password}</prop>
                <prop key="cachePrepStmts">true</prop>
                <prop key="useServerPrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">250</prop>
            </props>
        </property>
    </bean>

    <bean id="mysqlJdbcEventStore" class="com.saasovation.common.port.adapter.persistence.eventsourcing.mysql.MySQLJDBCEventStore" autowire="byName">
        <constructor-arg ref="eventStoreDataSource"/>
    </bean>

    <bean id="publishedNotificationTrackerStore" class="com.saasovation.common.port.adapter.persistence.hibernate.HibernatePublishedNotificationTrackerStore"
          autowire="byName"/>

    <bean id="timeConstrainedProcessTrackerRepository"
          class="com.saasovation.common.port.adapter.persistence.hibernate.HibernateTimeConstrainedProcessTrackerRepository" autowire="byName"/>

    <bean id="testableTimeConstrainedProcessRepository" class="com.saasovation.common.domain.model.process.TestableTimeConstrainedProcessRepository"
          autowire="byName"/>
</beans>
